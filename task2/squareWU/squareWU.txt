#include <iostream>
using namespace std;

struct ListNode
{
	int val;
	ListNode *next;
	ListNode(int x) : val(x), next(NULL) {};
};

ListNode *addTwoNumbers(ListNode*l1, ListNode*l2)
{
	ListNode* m = l1->next;
	ListNode* n = l2->next;
	ListNode*head;
	ListNode*listC = new ListNode(0);
	head = listC;
	int t = 0;
	while (m != NULL&&n != NULL)
	{
		head->next = new ListNode(0);
		head = head->next;
		head->val = m->val + n->val + t;
		t = 0;
		if (head->val >= 10)
		{
			t = (head->val) / 10;     /*这两步顺序不能调换，否则t总是为0*/
			head->val = (head->val) % 10;
		}
		m = m->next;
		n = n->next;
	}
	if (m == NULL&&n != NULL)
	{
		while (n != NULL)
		{
			head->next = new ListNode(0);
			head = head->next;
			head->val = n->val + t;
                        t = (head->val) / 10;
			n = n->next;
		}
	}
	if (n == NULL&&m != NULL)
	{
		while (m != NULL)
		{
			head->next = new ListNode(0);
			head = head->next;
			head->val = m->val + t;
			t = (head->val) / 10;
			m = m->next;
		}
	}
	if (t == 1)
		head->next = new ListNode(1);
	return listC;
}

void showlist(ListNode* list)
{
	ListNode* g = list->next;
	while (g != NULL)
	{
		cout << g->val << " ";
		g = g->next;
	}
}

int main()
{
	ListNode* listA = new ListNode(0);
	ListNode* listB = new ListNode(0);
	int a[] = { 1,2,3,4 };
	int b[] = { 5,6,8 };
	ListNode* p = listA;
	ListNode* q = listB;
	int i;
	for (i = 0;i < sizeof(a) / sizeof(int);i++)
	{
		p->next = new ListNode(a[i]);
		p = p->next;
	}
	for (i = 0;i < sizeof(b) / sizeof(int);i++)
	{
		q->next = new ListNode(b[i]);
		q = q->next;
	}
	ListNode *listC = addTwoNumbers(listA, listB);
	showlist(listC);
	return 0;
}
